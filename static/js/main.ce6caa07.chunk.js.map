{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","_ref","children","_useProjects","_useState5","useState","_useState6","_slicedToArray","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","_objectSpread","data","docId","JSON","stringify","useProjects","React","createElement","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","_useState","_useState2","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","onKeyDown","e","role","tabIndex","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","FaSpaceShuttle","add","FaSun","FaRegPaperPlane","AddTask","_ref$showAddTaskMain","showAddTaskMain","_ref$shouldShowMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","_useState3","_useState4","taskDate","_useState7","_useState8","showMain","setShowMain","_useState9","_useState10","_useState11","_useState12","addTask","collatedDate","archived","date","userId","Fragment","type","onChange","target","FaRegListAlt","FaRegCalendarAlt","Header","darkMode","setDarkMode","setShouldShowMain","src","alt","FaPizzaSlice","IndividualProject","showConfirm","setShowConfirm","_useProjectsValue","FaTrashAlt","doc","delete","_toConsumableArray","Projects","_ref$activeValue","activeValue","active","setActive","data-doc-id","concat","AddProject","_ref$shouldShow","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","FaInbox","FaRegCalendar","FaChevronDown","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getCollatedTitle","length","getTitle","document","title","Content","App","_ref$darkModeDefault","darkModeDefault","render","getElementById"],"mappings":"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","file":"static/js/main.ce6caa07.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = firebase.initializeApp({\n  apiKey: \"AIzaSyDTWbIAch_-sqere8lVAA5Crs_qJSLPU9c\",\n  authDomain: \"todoist-master-74a8d.firebaseapp.com\",\n  databaseURL: \"https://todoist-master-74a8d-default-rtdb.firebaseio.com\",\n  projectId: \"todoist-master-74a8d\",\n  storageBucket: \"todoist-master-74a8d.appspot.com\",\n  messagingSenderId: \"872354699201\",\n  appId: \"1:872354699201:web:6db5277e7adfa751d38140\",\n  measurementId: \"G-9LXV0S7FNY\",\n});\n\nexport { firebaseConfig as firebase };","export const collatedTasks = [\n  { key: 'INBOX', name: 'Inbox' },\n  { key: 'TODAY', name: 'Today' },\n  { key: 'NEXT_7', name: 'Next 7 Days' },\n];\n","import { collatedTasks } from '../constants';\n\nexport const getTitle = (projects, projectId) =>\n  projects.find(project => project.projectId === projectId);\n\nexport const getCollatedTitle = (projects, key) =>\n  projects.find(project => project.key === key);\n\nexport const collatedTasksExist = selectedProject =>\n  collatedTasks.find(task => task.key === selectedProject);\n\nexport const generatePushId = (() => {\n  const PUSH_CHARS =\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\n  const lastRandChars = [];\n\n  return function() {\n    let now = new Date().getTime();\n\n    const timeStampChars = new Array(8);\n    for (var i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      now = Math.floor(now / 64);\n    }\n\n    let id = timeStampChars.join('');\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    return id;\n  };\n})();\n","import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjects } from '../hooks';\n\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({ children }) => {\n  const { projects, setProjects } = useProjects();\n\n  return (\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\n      {children}\n    </ProjectsContext.Provider>\n  );\n};\n\nexport const useProjectsValue = () => useContext(ProjectsContext);\n\nProjectsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { collatedTasksExist } from '../helpers';\n\nexport const useTasks = selectedProject => {\n  const [tasks, setTasks] = useState([]);\n  const [archivedTasks, setArchivedTasks] = useState([]);\n\n  useEffect(() => {\n    let unsubscribe = firebase\n      .firestore()\n      .collection('tasks')\n      .where('userId', '==', 'anijosh');\n\n    unsubscribe =\n      selectedProject && !collatedTasksExist(selectedProject)\n        ? (unsubscribe = unsubscribe.where('projectId', '==', selectedProject))\n        : selectedProject === 'TODAY'\n        ? (unsubscribe = unsubscribe.where(\n            'date',\n            '==',\n            moment().format('DD/MM/YYYY')\n          ))\n        : selectedProject === 'INBOX' || selectedProject === 0\n        ? (unsubscribe = unsubscribe.where('date', '==', ''))\n        : unsubscribe;\n\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\n      const newTasks = snapshot.docs.map(task => ({\n        id: task.id,\n        ...task.data(),\n      }));\n\n      setTasks(\n        selectedProject === 'NEXT_7'\n          ? newTasks.filter(\n              task =>\n                moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days') <= 7 &&\n                task.archived !== true\n            )\n          : newTasks.filter(task => task.archived !== true)\n      );\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\n    });\n\n    return () => unsubscribe();\n  }, [selectedProject]);\n\n  return { tasks, archivedTasks };\n};\n\nexport const useProjects = () => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('projects')\n      .where('userId', '==', 'anijosh')\n      .orderBy('projectId')\n      .get()\n      .then(snapshot => {\n        const allProjects = snapshot.docs.map(project => ({\n          ...project.data(),\n          docId: project.id,\n        }));\n\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n          setProjects(allProjects);\n        }\n      });\n  }, [projects]);\n\n  return { projects, setProjects };\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({ children }) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n\n  return (\n    <SelectedProjectContext.Provider\n      value={{ selectedProject, setSelectedProject }}\n    >\n      {children}\n    </SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\n\nSelectedProjectProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjectsValue } from '../context';\n\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) => {\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    showProjectOverlay && (\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\n        <ul className=\"project-overlay__list\">\n          {projects.map((project) => (\n            <li key={project.projectId}>\n              <div\n                data-testid=\"project-overlay-action\"\n                onClick={() => {\n                  setProject(project.projectId);\n                  setShowProjectOverlay(false);\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    setProject(project.projectId);\n                    setShowProjectOverlay(false);\n                  }\n                }}\n                role=\"button\"\n                tabIndex={0}\n                aria-label=\"Select the task project\"\n              >\n                {project.name}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};\n\nProjectOverlay.propTypes = {\n  projects: PropTypes.array,\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\n  showTaskDate && (\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\n      <ul className=\"task-date__list\">\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-today\"\n            tabIndex={0}\n            aria-label=\"Select today as the task date\"\n            role=\"button\"\n          >\n            <span>\n              <FaSpaceShuttle />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-tomorrow\"\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"Select tomorrow as the task date\"\n          >\n            <span>\n              <FaSun />\n            </span>\n            <span>Tomorrow</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-next-week\"\n            aria-label=\"Select next week as the task date\"\n            tabIndex={0}\n            role=\"button\"\n          >\n            <span>\n              <FaRegPaperPlane />\n            </span>\n            <span>Next week</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n\nTaskDate.propTypes = {\n  setTaskDate: PropTypes.func.isRequired,\n  showTaskDate: PropTypes.bool.isRequired,\n  setShowTaskDate: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { firebase } from '../firebase';\nimport { useSelectedProjectValue } from '../context';\nimport { ProjectOverlay } from './ProjectOverlay';\nimport { TaskDate } from './TaskDate';\n\nexport const AddTask = ({\n  showAddTaskMain = true,\n  shouldShowMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask,\n}) => {\n  const [task, setTask] = useState('');\n  const [taskDate, setTaskDate] = useState('');\n  const [project, setProject] = useState('');\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n\n  const { selectedProject } = useSelectedProjectValue();\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n    let collatedDate = '';\n\n    if (projectId === 'TODAY') {\n      collatedDate = moment().format('DD/MM/YYYY');\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\n    }\n\n    return (\n      task &&\n      projectId &&\n      firebase\n        .firestore()\n        .collection('tasks')\n        .add({\n          archived: false,\n          projectId,\n          task,\n          date: collatedDate || taskDate,\n          userId: 'anijosh',\n        })\n        .then(() => {\n          setTask('');\n          setProject('');\n          setShowMain('');\n          setShowProjectOverlay(false);\n        })\n    );\n  };\n\n  return (\n    <div\n      className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\n      data-testid=\"add-task-comp\"\n    >\n      {showAddTaskMain && (\n        <div\n          className=\"add-task__shallow\"\n          data-testid=\"show-main-action\"\n          onClick={() => setShowMain(!showMain)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShowMain(!showMain);\n          }}\n          tabIndex={0}\n          aria-label=\"Add task\"\n          role=\"button\"\n        >\n          <span className=\"add-task__plus\">+</span>\n          <span className=\"add-task__text\">Add Task</span>\n        </div>\n      )}\n\n      {(showMain || showQuickAddTask) && (\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\n          {showQuickAddTask && (\n            <>\n              <div data-testid=\"quick-add-task\">\n                <h2 className=\"header\">Quick Add Task</h2>\n                <span\n                  className=\"add-task__cancel-x\"\n                  data-testid=\"add-task-quick-cancel\"\n                  aria-label=\"Cancel adding task\"\n                  onClick={() => {\n                    setShowMain(false);\n                    setShowProjectOverlay(false);\n                    setShowQuickAddTask(false);\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setShowMain(false);\n                      setShowProjectOverlay(false);\n                      setShowQuickAddTask(false);\n                    }\n                  }}\n                  tabIndex={0}\n                  role=\"button\"\n                >\n                  X\n                </span>\n              </div>\n            </>\n          )}\n          <ProjectOverlay\n            setProject={setProject}\n            showProjectOverlay={showProjectOverlay}\n            setShowProjectOverlay={setShowProjectOverlay}\n          />\n          <TaskDate\n            setTaskDate={setTaskDate}\n            showTaskDate={showTaskDate}\n            setShowTaskDate={setShowTaskDate}\n          />\n          <input\n            className=\"add-task__content\"\n            aria-label=\"Enter your task\"\n            data-testid=\"add-task-content\"\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n          />\n          <button\n            type=\"button\"\n            className=\"add-task__submit\"\n            data-testid=\"add-task\"\n            onClick={() =>\n              showQuickAddTask\n                ? addTask() && setShowQuickAddTask(false)\n                : addTask()\n            }\n          >\n            Add Task\n          </button>\n          {!showQuickAddTask && (\n            <span\n              className=\"add-task__cancel\"\n              data-testid=\"add-task-main-cancel\"\n              onClick={() => {\n                setShowMain(false);\n                setShowProjectOverlay(false);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowMain(false);\n                  setShowProjectOverlay(false);\n                }\n              }}\n              aria-label=\"Cancel adding a task\"\n              tabIndex={0}\n              role=\"button\"\n            >\n              Cancel\n            </span>\n          )}\n          <span\n            className=\"add-task__project\"\n            data-testid=\"show-project-overlay\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className=\"add-task__date\"\n            data-testid=\"show-task-date-overlay\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowTaskDate(!showTaskDate);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nAddTask.propTypes = {\n  showAddTaskMain: PropTypes.bool,\n  shouldShowMain: PropTypes.bool,\n  showQuickAddTask: PropTypes.bool,\n  setShowQuickAddTask: PropTypes.func,\n};","import React, { useState } from 'react';\nimport { FaPizzaSlice } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { AddTask } from '../AddTask';\n\nexport const Header = ({ darkMode, setDarkMode }) => {\n  const [shouldShowMain, setShouldShowMain] = useState(false);\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n\n  return (\n    <header className=\"header\" data-testid=\"header\">\n      <nav>\n        <div className=\"logo\">\n          <img src=\"/images/logo.png\" alt=\"Todoist\" />\n        </div>\n        <div className=\"settings\">\n          <ul>\n            <li className=\"settings__add\">\n              <button\n                data-testid=\"quick-add-task-action\"\n                aria-label=\"Quick add task\"\n                type=\"button\"\n                onClick={() => {\n                  setShowQuickAddTask(true);\n                  setShouldShowMain(true);\n                }}\n              >\n                +\n              </button>\n            </li>\n            <li className=\"settings__darkmode\">\n              <button\n                data-testid=\"dark-mode-action\"\n                aria-label=\"Darkmode on/off\"\n                type=\"button\"\n                onClick={() => setDarkMode(!darkMode)}\n              >\n                <FaPizzaSlice />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <AddTask\n        showAddTaskMain={false}\n        shouldShowMain={shouldShowMain}\n        showQuickAddTask={showQuickAddTask}\n        setShowQuickAddTask={setShowQuickAddTask}\n      />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  darkMode: PropTypes.bool.isRequired,\n  setDarkMode: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\nimport { firebase } from '../firebase';\n\nexport const IndividualProject = ({ project }) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { projects, setProjects } = useProjectsValue();\n  const { setSelectedProject } = useSelectedProjectValue();\n\n  const deleteProject = (docId) => {\n    firebase\n      .firestore()\n      .collection('projects')\n      .doc(docId)\n      .delete()\n      .then(() => {\n        setProjects([...projects]);\n        setSelectedProject('INBOX');\n      });\n  };\n\n  return (\n    <>\n      <span className=\"sidebar__dot\">•</span>\n      <span className=\"sidebar__project-name\">{project.name}</span>\n      <span\n        className=\"sidebar__project-delete\"\n        data-testid=\"delete-project\"\n        onClick={() => setShowConfirm(!showConfirm)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowConfirm(!showConfirm);\n        }}\n        tabIndex={0}\n        role=\"button\"\n        aria-label=\"Confirm deletion of project\"\n      >\n        <FaTrashAlt />\n        {showConfirm && (\n          <div className=\"project-delete-modal\">\n            <div className=\"project-delete-modal__inner\">\n              <p>Are you sure you want to delete this project?</p>\n              <button\n                type=\"button\"\n                onClick={() => deleteProject(project.docId)}\n              >\n                Delete\n              </button>\n              <span\n                onClick={() => setShowConfirm(!showConfirm)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') setShowConfirm(!showConfirm);\n                }}\n                tabIndex={0}\n                role=\"button\"\n                aria-label=\"Cancel adding project, do not delete\"\n              >\n                Cancel\n              </span>\n            </div>\n          </div>\n        )}\n      </span>\n    </>\n  );\n};\n\nIndividualProject.propTypes = {\n  project: PropTypes.object.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n        data-testid=\"project-action-parent\"\n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n      >\n        <div\n          role=\"button\"\n          data-testid=\"project-action\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          <IndividualProject project={project} />\n        </div>\n      </li>\n    ))\n  );\n};\n\nProjects.propTypes = {\n  activeValue: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { firebase } from '../firebase';\nimport { generatePushId } from '../helpers';\nimport { useProjectsValue } from '../context';\n\nexport const AddProject = ({ shouldShow = false }) => {\n  const [show, setShow] = useState(shouldShow);\n  const [projectName, setProjectName] = useState('');\n\n  const projectId = generatePushId();\n  const { projects, setProjects } = useProjectsValue();\n\n  const addProject = () =>\n    projectName &&\n    firebase\n      .firestore()\n      .collection('projects')\n      .add({\n        projectId,\n        name: projectName,\n        userId: 'anijosh',\n      })\n      .then(() => {\n        setProjects([...projects]);\n        setProjectName('');\n        setShow(false);\n      });\n\n  return (\n    <div className=\"add-project\" data-testid=\"add-project\">\n      {show && (\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\n          <input\n            value={projectName}\n            onChange={(e) => setProjectName(e.target.value)}\n            className=\"add-project__name\"\n            data-testid=\"project-name\"\n            type=\"text\"\n            placeholder=\"Name your project\"\n          />\n          <button\n            className=\"add-project__submit\"\n            type=\"button\"\n            onClick={() => addProject()}\n            data-testid=\"add-project-submit\"\n          >\n            Add Project\n          </button>\n          <span\n            aria-label=\"Cancel adding project\"\n            data-testid=\"hide-project-overlay\"\n            className=\"add-project__cancel\"\n            onClick={() => setShow(false)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShow(false);\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            Cancel\n          </span>\n        </div>\n      )}\n      <span className=\"add-project__plus\">+</span>\n      <span\n        aria-label=\"Add Project\"\n        data-testid=\"add-project-action\"\n        className=\"add-project__text\"\n        onClick={() => setShow(!show)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShow(!show);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        Add Project\n      </span>\n    </div>\n  );\n};\n\nAddProject.propTypes = {\n  shouldShow: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport {\n  FaChevronDown,\n  FaInbox,\n  FaRegCalendarAlt,\n  FaRegCalendar,\n} from 'react-icons/fa';\nimport { Projects } from '../Projects';\nimport { useSelectedProjectValue } from '../../context';\nimport { AddProject } from '../AddProject';\n\nexport const Sidebar = () => {\n  const { setSelectedProject } = useSelectedProjectValue();\n  const [active, setActive] = useState('inbox');\n  const [showProjects, setShowProjects] = useState(true);\n\n  return (\n    <div className=\"sidebar\" data-testid=\"sidebar\">\n      <ul className=\"sidebar__generic\">\n        <li\n          data-testid=\"inbox\"\n          className={active === 'inbox' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"inbox-action\"\n            aria-label=\"Show inbox tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('inbox');\n              setSelectedProject('INBOX');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('inbox');\n                setSelectedProject('INBOX');\n              }\n            }}\n          >\n            <span>\n              <FaInbox />\n            </span>\n            <span>Inbox</span>\n          </div>\n        </li>\n        <li\n          data-testid=\"today\"\n          className={active === 'today' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"today-action\"\n            aria-label=\"Show today's tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('today');\n              setSelectedProject('TODAY');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('today');\n                setSelectedProject('TODAY');\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendar />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li\n          data-testid=\"next_7\"\n          className={active === 'next_7' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"next_7-action\"\n            aria-label=\"Show tasks for the next 7 days\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('next_7');\n              setSelectedProject('NEXT_7');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('next_7');\n                setSelectedProject('NEXT_7');\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendarAlt />\n            </span>\n            <span>Next 7 days</span>\n          </div>\n        </li>\n      </ul>\n      <div\n        className=\"sidebar__middle\"\n        aria-label=\"Show/hide projects\"\n        onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowProjects(!showProjects);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <span>\n          <FaChevronDown\n            className={!showProjects ? 'hidden-projects' : undefined}\n          />\n        </span>\n        <h2>Projects</h2>\n      </div>\n\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\n\n      {showProjects && <AddProject />}\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { firebase } from '../firebase';\n\nexport const Checkbox = ({ id, taskDesc }) => {\n  const archiveTask = () => {\n    firebase.firestore().collection('tasks').doc(id).update({\n      archived: true,\n    });\n  };\n\n  return (\n    <div\n      className=\"checkbox-holder\"\n      data-testid=\"checkbox-action\"\n      onClick={() => archiveTask()}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') archiveTask();\n      }}\n      aria-label={`Mark ${taskDesc} as done?`}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <span className=\"checkbox\" />\n    </div>\n  );\n};\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  taskDesc: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { Checkbox } from './Checkbox';\nimport { AddTask } from './AddTask';\nimport { useTasks } from '../hooks';\nimport { collatedTasks } from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\n\nexport const Tasks = () => {\n  const { selectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n  const { tasks } = useTasks(selectedProject);\n\n  let projectName = '';\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n  }\n\n  if (\n    projects &&\n    projects.length > 0 &&\n    selectedProject &&\n    !collatedTasksExist(selectedProject)\n  ) {\n    projectName = getTitle(projects, selectedProject).name;\n  }\n\n  useEffect(() => {\n    document.title = `${projectName}: Todoist`;\n  });\n\n  return (\n    <div className=\"tasks\" data-testid=\"tasks\">\n      <h2 data-testid=\"project-name\">{projectName}</h2>\n\n      <ul className=\"tasks__list\">\n        {tasks.map((task) => (\n          <li key={`${task.id}`}>\n            <Checkbox id={task.id} taskDesc={task.task} />\n            <span>{task.task}</span>\n          </li>\n        ))}\n      </ul>\n\n      <AddTask />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { Tasks } from '../Tasks';\n\nexport const Content = () => (\n  <section className=\"content\">\n    <Sidebar />\n    <Tasks />\n  </section>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from './components/layout/Header';\nimport { Content } from './components/layout/Content';\nimport { ProjectsProvider, SelectedProjectProvider } from './context';\n\nexport const App = ({ darkModeDefault = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n\n  return (\n    <SelectedProjectProvider>\n      <ProjectsProvider>\n        <main\n          data-testid=\"application\"\n          className={darkMode ? 'darkmode' : undefined}\n        >\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Content />\n        </main>\n      </ProjectsProvider>\n    </SelectedProjectProvider>\n  );\n};\n\nApp.propTypes = {\n  darkModeDefault: PropTypes.bool,\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './App';\nimport './App.scss';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}